<?xml version="1.0" encoding="UTF-8" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="payum.heartland.payment.class">Payum\Payment</parameter>
        <parameter key="payum.heartland.api.class">Payum\Heartland\Api</parameter>
        <parameter key="payum.heartland.soap.class">Payum\Heartland\SoapClient</parameter>
        <parameter key="payum.heartland.action.make_blind_payment.class">Payum\Heartland\Action\MakeBlindPaymentAction</parameter>
        <parameter key="payum.heartland.action.get_token.class">Payum\Heartland\Action\GetTokenAction</parameter>
        <parameter key="payum.heartland.action.status.class">Payum\Heartland\Action\StatusAction</parameter>
    </parameters>

    <services>
        <service
            id="payum.heartland.api"
            class="%payum.heartland.api.class%"
            abstract="true"
            public="false"
        >
            <!-- It is template service. The real service will be created by HeartlandPaymentFactory -->
            <argument/>
        </service>

        <service
            id="payum.heartland.action.make_blind_payment"
            class="%payum.heartland.action.make_blind_payment.class%"
            public="false"
        >
        </service>

        <service
            id="payum.heartland.action.get_token"
            class="%payum.heartland.action.get_token.class%"
            public="false"
        >
        </service>

        <service
            id="payum.heartland.action.status"
            class="%payum.heartland.action.status.class%"
            public="false"
        >
        </service>
    </services>
</container>
